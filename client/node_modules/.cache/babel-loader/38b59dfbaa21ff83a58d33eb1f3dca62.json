{"ast":null,"code":"import api from './api-config';\nexport const loginUser = async loginData => {\n  // directs to authentication controller\n  const resp = await api.post('/auth/login', {\n    authentication: loginData\n  }); // store token in local storage\n\n  localStorage.setItem('authToken', resp.data.token); // attach an authorization header for each instance of axios ()\n\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  return resp.data.user;\n};\nexport const registerUser = async registerData => {\n  // directs to user controller\n  const resp = await api.post('/users/', {\n    user: registerData\n  });\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  return resp.data.user;\n};\nexport const verifyUser = async () => {\n  // get the token that was set\n  const token = localStorage.getItem('authToken');\n\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n    const resp = await api.get('/auth/verify');\n    return resp.data;\n  }\n\n  return null;\n};\nexport const removeToken = () => {\n  // logout by removing the token from local storage\n  api.defaults.headers.common.authorization = null;\n};","map":{"version":3,"sources":["/Users/pauloh/general_assembly/sei/loon/unit_4/project-4/The-Collective-App/client/src/services/auth.js"],"names":["api","loginUser","loginData","resp","post","authentication","localStorage","setItem","data","token","defaults","headers","common","authorization","user","registerUser","registerData","verifyUser","getItem","get","removeToken"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,SAAP,IAAqB;AAC7C;AACC,QAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;AAAEC,IAAAA,cAAc,EAAEH;AAAlB,GAAxB,CAAnB,CAF4C,CAG7C;;AACCI,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,IAAL,CAAUC,KAA5C,EAJ4C,CAK7C;;AACCT,EAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASV,IAAI,CAACK,IAAL,CAAUC,KAAM,EAAtE;AACD,SAAON,IAAI,CAACK,IAAL,CAAUM,IAAjB;AACA,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAOC,YAAP,IAAwB;AACnD;AACC,QAAMb,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,SAAT,EAAoB;AAAEU,IAAAA,IAAI,EAAEE;AAAR,GAApB,CAAnB;AACDV,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,IAAL,CAAUC,KAA5C;AACAT,EAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASV,IAAI,CAACK,IAAL,CAAUC,KAAM,EAAtE;AACA,SAAON,IAAI,CAACK,IAAL,CAAUM,IAAjB;AACA,CANM;AAQP,OAAO,MAAMG,UAAU,GAAG,YAAY;AACpC;AACD,QAAMR,KAAK,GAAGH,YAAY,CAACY,OAAb,CAAqB,WAArB,CAAd;;AACA,MAAIT,KAAJ,EAAW;AACVT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASJ,KAAM,EAA5D;AACA,UAAMN,IAAI,GAAG,MAAMH,GAAG,CAACmB,GAAJ,CAAQ,cAAR,CAAnB;AACA,WAAOhB,IAAI,CAACK,IAAZ;AACA;;AACD,SAAO,IAAP;AACA,CATM;AAWP,OAAO,MAAMY,WAAW,GAAG,MAAM;AAC/B;AACDpB,EAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA4C,IAA5C;AACA,CAHM","sourcesContent":["import api from './api-config';\n\nexport const loginUser = async (loginData) => {\n\t// directs to authentication controller\n  const resp = await api.post('/auth/login', { authentication: loginData });\n\t// store token in local storage\n  localStorage.setItem('authToken', resp.data.token);\n\t// attach an authorization header for each instance of axios ()\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n\treturn resp.data.user;\n};\n\nexport const registerUser = async (registerData) => {\n\t// directs to user controller\n  const resp = await api.post('/users/', { user: registerData });\n\tlocalStorage.setItem('authToken', resp.data.token);\n\tapi.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n\treturn resp.data.user;\n};\n\nexport const verifyUser = async () => {\n  // get the token that was set\n\tconst token = localStorage.getItem('authToken');\n\tif (token) {\n\t\tapi.defaults.headers.common.authorization = `Bearer ${token}`;\n\t\tconst resp = await api.get('/auth/verify');\n\t\treturn resp.data;\n\t}\n\treturn null;\n};\n\nexport const removeToken = () => {\n  // logout by removing the token from local storage\n\tapi.defaults.headers.common.authorization = null;\n};"]},"metadata":{},"sourceType":"module"}