{"ast":null,"code":"var _jsxFileName = \"/Users/pauloh/general_assembly/sei/loon/unit_4/project-4/The-Collective-App/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./MainContainer.css\";\nimport NFTs from \"../screens/NFTs/NFTs\";\nimport EditNFT from \"../screens/EditNFT/EditNFT\";\nimport AddNFT from \"../screens/AddNFT/AddNFT\";\nimport DetailNFT from \"../screens/DetailNFT/DetailNFT\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { deleteNFT, getAllNFTs, postNFT, putNFT } from \"../services/nfts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainContainer() {\n  _s();\n\n  const [nfts, setNfts] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchNfts = async () => {\n      const nftList = await getAllNFTs();\n      setNfts(nftList);\n    };\n\n    fetchNfts();\n  }, []);\n\n  const handleCreate = async formData => {\n    const nft = await postNFT(formData);\n    setNfts(prevState => [...prevState, nft]);\n    history.push(\"/nfts\");\n  };\n\n  const handleUpdate = async (id, formData) => {\n    const nftItem = await putNFT(id, formData);\n    setNfts(prevState => prevState.map(nft => {\n      return nft.id === Number(id) ? nftItem : nft;\n    }));\n    history.push(\"/nfts\");\n  };\n\n  const handleDelete = async id => {\n    await deleteNFT(id);\n    setNfts(prevState => prevState.filter(nft => nft.id !== id));\n    history.push(\"/nfts\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/nfts/:id/edit\",\n        children: /*#__PURE__*/_jsxDEV(EditNFT, {\n          handleUpdate: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/nfts/:id\",\n        children: /*#__PURE__*/_jsxDEV(DetailNFT, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-nft\",\n        children: /*#__PURE__*/_jsxDEV(AddNFT, {\n          handleCreate: handleCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/nfts\",\n        children: /*#__PURE__*/_jsxDEV(NFTs, {\n          nfts: nfts,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"SNigKfUln1wLdMyn01kHiw5sdh0=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/pauloh/general_assembly/sei/loon/unit_4/project-4/The-Collective-App/client/src/containers/MainContainer.jsx"],"names":["NFTs","EditNFT","AddNFT","DetailNFT","useState","useEffect","Switch","Route","useHistory","deleteNFT","getAllNFTs","postNFT","putNFT","MainContainer","nfts","setNfts","history","fetchNfts","nftList","handleCreate","formData","nft","prevState","push","handleUpdate","id","nftItem","map","Number","handleDelete","filter"],"mappings":"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","sourcesContent":["import \"./MainContainer.css\";\nimport NFTs from \"../screens/NFTs/NFTs\";\nimport EditNFT from \"../screens/EditNFT/EditNFT\";\nimport AddNFT from \"../screens/AddNFT/AddNFT\";\nimport DetailNFT from \"../screens/DetailNFT/DetailNFT\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { deleteNFT, getAllNFTs, postNFT, putNFT } from \"../services/nfts\";\n\nexport default function MainContainer() {\n  const [nfts, setNfts] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      const nftList = await getAllNFTs();\n      setNfts(nftList);\n    };\n    fetchNfts();\n  }, []);\n\n  const handleCreate = async (formData) => {\n    const nft = await postNFT(formData);\n    setNfts((prevState) => [...prevState, nft]);\n    history.push(\"/nfts\");\n  };\n\n  const handleUpdate = async (id, formData) => {\n    const nftItem = await putNFT(id, formData);\n    setNfts((prevState) =>\n      prevState.map((nft) => {\n        return nft.id === Number(id) ? nftItem : nft;\n      })\n    );\n    history.push(\"/nfts\");\n  };\n\n  const handleDelete = async (id) => {\n    await deleteNFT(id);\n    setNfts((prevState) => prevState.filter((nft) => nft.id !== id));\n    history.push(\"/nfts\");\n  };\n\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/nfts/:id/edit\">\n          <EditNFT handleUpdate={handleUpdate}/>\n        </Route>\n        <Route path=\"/nfts/:id\">\n          <DetailNFT />\n        </Route>\n        <Route path=\"/add-nft\">\n          <AddNFT handleCreate={handleCreate} />\n        </Route>\n        <Route path=\"/nfts\">\n          <NFTs nfts={nfts} handleDelete={handleDelete} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}